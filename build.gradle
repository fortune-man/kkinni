plugins {
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'jacoco'
}

group = 'com.kkinni'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// 스프링 부트 스타터
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Redis 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// 개발 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MariaDB 클라이언트
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
		showStandardStreams = true
	}
}
tasks.withType(JavaCompile) {
	options.compilerArgs += '-parameters'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	withSourcesJar()
	withJavadocJar()
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = file("${buildDir}/jacocoHtml")
	}
}